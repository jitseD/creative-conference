---
const { talk } = Astro.props;
---

<style>
    .talk__time {
        font-size: var(--f-l);
        justify-self: flex-end;
    }

    .talk__wrapper {
        border: var(--c-black) 0.1rem solid;
        display: grid;
        grid-template-columns: min-content 1fr;
        gap: var(--s-2xs) var(--s-xs);
        padding: var(--s-m);
    }

    .talk__location {
        display: flex;
        gap: var(--s-xs);
    }

    .talk__location,
    .speaker__name {
        grid-column: 2;
    }

    .talk__time {
        font-family: "Chakra Petch", sans-serif;
        font-size: var(--f-l);
        font-weight: 300;
        align-items: flex-start;
    }

    .talk__name,
    .talk__time {
        color: var(--c-blue-d);
    }

    .talk__name {
        padding: unset;
        align-self: center;
    }

    .break .talk__time,
    .break .talk__name,
    .evening-social .talk__time,
    .evening-social .talk__name {
        color: var(--c-black);
    }

    .break,
    .talk,
    .evening-social {
        inline-size: 100%;
        grid-column: 1/-1;
    }

    .break h3,
    .break .talk__time,
    .evening-social h3,
    .evening-social .talk__time {
        font-size: var(--f-s);
    }
</style>

<article
    class={`talk__wrapper ${talk.attributes.category?.data?.attributes.slug}`}
>
    <p class="talk__time">{talk.attributes.start}</p>
    <h3 class="talk__name">{talk.attributes.title}</h3>
    {
        talk.attributes.room?.data && (
            <div class="talk__location">
                <p class="talk__room">
                    {talk.attributes.room?.data?.attributes.name}
                </p>
                <p>-</p>
                <p class="talk__venue">
                    {
                        talk.attributes.room?.data?.attributes.venue.data
                            .attributes.name
                    }
                </p>
            </div>
        )
    }
    {
        talk.attributes.speaker?.data && (
            <p class="speaker__name">
                by
                {talk.attributes.speaker?.data?.attributes.name}
            </p>
        )
    }
</article>

<script>
        const $times = document.querySelectorAll(`.talk__time`);
        $times.forEach(($time) => {
            const time = $time.textContent;
            const [hours, minutes] = time.split(":").slice(0, 2);
            $time.textContent = `${hours}:${minutes}`;
        });
</script>
